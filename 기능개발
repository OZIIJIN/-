import java.util.*;

class Solution {
    public List<Integer> solution(int[] progresses, int[] speeds) {
        
        Queue<Integer> q = new LinkedList<>();
        List<Integer> list = new ArrayList<>();
        
        for(int i = 0; i < progresses.length; i++){
            
            q.offer((int)Math.ceil((100-progresses[i])/(double)speeds[i]));
        }
        
        while(!q.isEmpty()){
            int temp = 0;
            int number = q.poll();
            temp++;
            while(!q.isEmpty() && number >= q.peek()){
                q.poll();
                temp++;
            }
            list.add(temp);
        }
        return list;
    }
}
